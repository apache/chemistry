<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
	targetNamespace="http://docs.oasis-open.org/ns/cmis/messaging/200901"
	xmlns:cmis="http://docs.oasis-open.org/ns/cmis/core/200901"
	xmlns:cmism="http://docs.oasis-open.org/ns/cmis/messaging/200901"
	xmlns:jaxb="http://java.sun.com/xml/ns/jaxb"
	version="0.61" 
	xmlns:xjc="http://java.sun.com/xml/ns/jaxb/xjc"
	jaxb:extensionBindingPrefixes="xjc" jaxb:version="2.1"
	elementFormDefault="qualified">
	<xs:import schemaLocation="CMIS-Core.xsd"
		namespace="http://docs.oasis-open.org/ns/cmis/core/200901" />

	<!--Exceptions-->
	<xs:complexType name="cmisFaultType">
		<xs:sequence>
			<xs:element name="type" type="cmism:enumServiceException" />
			<xs:element name="code" type="xs:integer" />
			<xs:element name="message" type="xs:string" />
			<xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" />
		</xs:sequence>
	</xs:complexType>
	<xs:element name="cmisFault" type="cmism:cmisFaultType" />
	<xs:simpleType name="enumServiceException">
		<xs:restriction base="xs:string">
			<xs:enumeration value="constraint" />
			<xs:enumeration value="contentAlreadyExists" />
			<xs:enumeration value="filterNotValid" />
			<xs:enumeration value="folderNotValid" />
			<xs:enumeration value="invalidArgument" />
			<xs:enumeration value="notInFolder" />
			<xs:enumeration value="objectNotFound" />
			<xs:enumeration value="offset" />
			<xs:enumeration value="notSupported" />
			<xs:enumeration value="permissionDenied" />
			<xs:enumeration value="runtime" />
			<xs:enumeration value="storage" />
			<xs:enumeration value="streamNotSupported" />
			<xs:enumeration value="type" />
			<xs:enumeration value="updateConflict" />
			<xs:enumeration value="versioning" />
		</xs:restriction>
	</xs:simpleType>

	<!--[Repository Services]-->
	<xs:element name="getRepositories">
		<xs:complexType>
			<xs:sequence />
		</xs:complexType>
	</xs:element>
	<xs:element name="getRepositoriesResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="repository" type="cmis:cmisRepositoryEntryType"
					minOccurs="0" maxOccurs="unbounded" nillable="true" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>


	<!-- getRepositoryInfo Operation -->
	<xs:element name="getRepositoryInfo">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="repositoryId" type="xs:string"
					minOccurs="1" maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="getRepositoryInfoResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="repositoryInfo" type="cmis:cmisRepositoryInfoType" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<!-- getTypes Operation -->
	<xs:element name="getTypes">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="repositoryId" type="xs:string"
					minOccurs="1" maxOccurs="1" />
				<xs:element name="typeId" type="xs:string" minOccurs="0"
					maxOccurs="1" nillable="true" />
				<xs:element name="includePropertyDefinitions" type="xs:boolean"
					minOccurs="0" maxOccurs="1" nillable="true" />
				<xs:element name="maxItems" type="xs:integer" minOccurs="0"
					maxOccurs="1" nillable="true" />
				<xs:element name="skipCount" type="xs:integer" minOccurs="0"
					maxOccurs="1" nillable="true" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="getTypesResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="type" type="cmis:cmisTypeDefinitionType"
					minOccurs="0" maxOccurs="unbounded" />
				<xs:element name="hasMoreItems" type="xs:boolean"
					minOccurs="1" maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<!-- getTypeDefinition Operation -->
	<xs:element name="getTypeDefinition">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="repositoryId" type="xs:string"
					minOccurs="1" maxOccurs="1" />
				<xs:element name="typeId" type="xs:string" minOccurs="1"
					maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="getTypeDefinitionResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="type" type="cmis:cmisTypeDefinitionType"
					minOccurs="0" maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<!--[Navigation Services]-->
	<!-- getDescendants Operation -->
	<xs:element name="getDescendants">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="repositoryId" type="xs:string"
					minOccurs="1" maxOccurs="1" />
				<xs:element name="folderId" type="xs:string" minOccurs="1"
					maxOccurs="1" />
				<xs:element name="type" type="cmis:enumTypesOfFileableObjects"
					minOccurs="0" maxOccurs="1" />
				<xs:element name="depth" type="xs:integer" minOccurs="0"
					maxOccurs="1" nillable="true" />
				<xs:element name="filter" type="xs:string" minOccurs="0"
					maxOccurs="1" nillable="true" />
				<xs:element name="includeAllowableActions" type="xs:boolean"
					minOccurs="0" maxOccurs="1" nillable="true" />
				<xs:element name="includeRelationships" type="cmis:enumIncludeRelationships"
					minOccurs="0" maxOccurs="1" nillable="true" />
				<xs:element name="orderBy" type="xs:string" minOccurs="0" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="getDescendantsResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="cmis:object" minOccurs="0" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<!-- getChildren Operation -->
	<xs:element name="getChildren">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="repositoryId" type="xs:string"
					minOccurs="1" maxOccurs="1" />
				<xs:element name="folderId" type="xs:string" minOccurs="1"
					maxOccurs="1" />
				<xs:element name="type" type="cmis:enumTypesOfFileableObjects"
					minOccurs="0" maxOccurs="1" nillable="true" />
				<xs:element name="filter" type="xs:string" minOccurs="0"
					maxOccurs="1" nillable="true" />
				<xs:element name="includeAllowableActions" type="xs:boolean"
					minOccurs="0" maxOccurs="1" nillable="true" />
				<xs:element name="includeRelationships" type="cmis:enumIncludeRelationships"
					minOccurs="0" maxOccurs="1" nillable="true" />
				<xs:element name="maxItems" type="xs:integer" minOccurs="0"
					maxOccurs="1" nillable="true" />
				<xs:element name="skipCount" type="xs:integer" minOccurs="0"
					maxOccurs="1" nillable="true" />
				<xs:element name="orderBy" type="xs:string" minOccurs="0" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="getChildrenResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="cmis:object" minOccurs="0" maxOccurs="unbounded" />
				<xs:element name="hasMoreItems" type="xs:boolean"
					minOccurs="1" maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<!-- getFolderParent Operation -->
	<xs:element name="getFolderParent">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="repositoryId" type="xs:string"
					minOccurs="1" maxOccurs="1" />
				<xs:element name="folderId" type="xs:string" minOccurs="1"
					maxOccurs="1" />
				<xs:element name="filter" type="xs:string" minOccurs="0"
					maxOccurs="1" />
				<xs:element name="includeAllowableActions" type="xs:boolean"
					minOccurs="0" maxOccurs="1" nillable="true" />
				<xs:element name="includeRelationships" type="cmis:enumIncludeRelationships"
					minOccurs="0" maxOccurs="1" nillable="true" />
				<xs:element name="returnToRoot" type="xs:boolean"
					minOccurs="0" maxOccurs="1" nillable="true" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="getFolderParentResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="cmis:object" minOccurs="0" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<!-- getObjectParents Operation-->
	<xs:element name="getObjectParents">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="repositoryId" type="xs:string"
					minOccurs="1" maxOccurs="1" />
				<xs:element name="objectId" type="xs:string" minOccurs="1"
					maxOccurs="1" />
				<xs:element name="filter" type="xs:string" minOccurs="0"
					maxOccurs="1" />
				<xs:element name="includeAllowableActions" type="xs:boolean"
					minOccurs="0" maxOccurs="1" nillable="true" />
				<xs:element name="includeRelationships" type="cmis:enumIncludeRelationships"
					minOccurs="0" maxOccurs="1" nillable="true" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="getObjectParentsResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="cmis:object" minOccurs="0" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<!-- getCheckedoutDocs Operation -->
	<xs:element name="getCheckedoutDocs">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="repositoryId" type="xs:string"
					minOccurs="1" maxOccurs="1" />
				<xs:element name="folderId" type="xs:string" minOccurs="0"
					maxOccurs="1" nillable="true" />
				<xs:element name="filter" type="xs:string" minOccurs="0"
					maxOccurs="1" nillable="true" />
				<xs:element name="orderBy" type="xs:string" minOccurs="0"
					maxOccurs="1" nillable="true" />
				<xs:element name="includeAllowableActions" type="xs:boolean"
					minOccurs="0" maxOccurs="1" nillable="true" />
				<xs:element name="includeRelationships" type="cmis:enumIncludeRelationships"
					minOccurs="0" maxOccurs="1" nillable="true" />
				<xs:element name="maxItems" type="xs:integer" minOccurs="0"
					maxOccurs="1" nillable="true" />
				<xs:element name="skipCount" type="xs:integer" minOccurs="0"
					maxOccurs="1" nillable="true" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="getCheckedoutDocsResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="cmis:object" minOccurs="0" maxOccurs="unbounded" />
				<xs:element name="hasMoreItems" type="xs:boolean"
					minOccurs="1" maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<!--[Object Services]-->

	<!-- createDocument Operation -->
	<xs:element name="createDocument">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="repositoryId" type="xs:string"
					minOccurs="1" maxOccurs="1" />
				<xs:element name="typeId" type="xs:string" minOccurs="1"
					maxOccurs="1" />
				<xs:element name="properties" type="cmis:cmisPropertiesType"
					minOccurs="1" maxOccurs="1" />
				<xs:element name="folderId" type="xs:string" minOccurs="0"
					maxOccurs="1" />
				<xs:element name="contentStream" type="cmis:cmisContentStreamType"
					minOccurs="0" maxOccurs="1" nillable="true" />
				<xs:element name="versioningState" type="cmis:enumVersioningState"
					minOccurs="0" maxOccurs="1" nillable="true" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="createDocumentResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="objectId" type="xs:string" minOccurs="1"
					maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<!-- createFolder Operation -->
	<xs:element name="createFolder">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="repositoryId" type="xs:string"
					minOccurs="1" maxOccurs="1" />
				<xs:element name="typeId" type="xs:string" minOccurs="1"
					maxOccurs="1" />
				<xs:element name="properties" type="cmis:cmisPropertiesType"
					minOccurs="1" maxOccurs="1" />
				<!-- must match the type attribute value of the properties object -->
				<xs:element name="folderId" type="xs:string" minOccurs="1"
					maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="createFolderResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="objectId" type="xs:string" minOccurs="1"
					maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<!-- createRelationship Operation -->
	<xs:element name="createRelationship">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="repositoryId" type="xs:string"
					minOccurs="1" maxOccurs="1" />
				<xs:element name="typeId" type="xs:string" minOccurs="1"
					maxOccurs="1" />
				<xs:element name="properties" type="cmis:cmisPropertiesType"
					minOccurs="1" maxOccurs="1" />
				<!-- must match the type attribute value of the properties object -->
				<xs:element name="sourceObjectId" type="xs:string"
					minOccurs="1" maxOccurs="1" />
				<!--
					if sourceObjectId exist in the properties passed in then their
					values MUST match
				-->
				<xs:element name="targetObjectId" type="xs:string"
					minOccurs="1" maxOccurs="1" />
				<!--
					if targetObjectId exist in the properties passed in then their
					values MUST match
				-->
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="createRelationshipResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="objectId" type="xs:string" minOccurs="1"
					maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<!--createPolicy Operation-->
	<xs:element name="createPolicy">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="repositoryId" type="xs:string"
					minOccurs="1" maxOccurs="1" />
				<xs:element name="typeId" type="xs:string" minOccurs="1"
					maxOccurs="1" />
				<xs:element name="properties" type="cmis:cmisPropertiesType"
					minOccurs="1" maxOccurs="1" />
				<!--
					note that the object type may also be an element in the object and
					if present the values must match
				-->
				<xs:element name="folderId" type="xs:string" minOccurs="0"
					maxOccurs="1" nillable="true" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="createPolicyResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="objectId" type="xs:string" minOccurs="1"
					maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<!--
		- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		- - - - - - - - - - - - - - - - -
	-->
	<!-- getAllowableActions Operation -->
	<xs:element name="getAllowableActions">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="repositoryId" type="xs:string"
					minOccurs="1" maxOccurs="1" />
				<xs:element name="objectId" type="xs:string" minOccurs="1"
					maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="getAllowableActionsResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="allowableActions" type="cmis:cmisAllowableActionsType"
					minOccurs="1" maxOccurs="1" />
				<!--
					returning no action elements indicates that no actions are allowed
				-->
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<!--
		- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		- - - - - - - - - - - - - - - - -
	-->
	<!-- getProperties Operation -->
	<xs:element name="getProperties">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="repositoryId" type="xs:string"
					minOccurs="1" maxOccurs="1" />
				<xs:element name="objectId" type="xs:string" minOccurs="1"
					maxOccurs="1" />
				<xs:element name="returnVersion" type="cmis:enumReturnVersion"
					minOccurs="0" maxOccurs="1" nillable="true" />
				<xs:element name="filter" type="xs:string" minOccurs="0"
					maxOccurs="1" nillable="true" />
				<xs:element name="includeAllowableActions" type="xs:boolean"
					minOccurs="0" maxOccurs="1" nillable="true" />
				<xs:element name="includeRelationships" type="cmis:enumIncludeRelationships"
					minOccurs="0" maxOccurs="1" nillable="true" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="getPropertiesResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="cmis:object" minOccurs="1" maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<!--
		- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		- - - - - - - - - - - - - - - - -
	-->
	<!-- getContentStream Operation -->
	<xs:element name="getContentStream">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="repositoryId" type="xs:string"
					minOccurs="1" maxOccurs="1" />
				<xs:element name="documentId" type="xs:string" minOccurs="1"
					maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="getContentStreamResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="contentStream" type="cmis:cmisContentStreamType"
					minOccurs="1" maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<!--
		- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		- - - - - - - - - - - - - - - - -
	-->
	<!-- updateProperties Operation -->
	<xs:element name="updateProperties">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="repositoryId" type="xs:string"
					minOccurs="1" maxOccurs="1" />
				<xs:element name="objectId" type="xs:string" minOccurs="1"
					maxOccurs="1" />
				<!--
					if objectId is present in the properties the value must match this
					objectId
				-->
				<xs:element name="changeToken" type="xs:string"
					minOccurs="0" maxOccurs="1" nillable="true" />
				<xs:element name="properties" type="cmis:cmisPropertiesType"
					minOccurs="1" maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="updatePropertiesResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="objectId" type="xs:string" minOccurs="1"
					maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<!--
		- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		- - - - - - - - - - - - - - - - -
	-->
	<!-- moveObject Operation -->
	<xs:element name="moveObject">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="repositoryId" type="xs:string"
					minOccurs="1" maxOccurs="1" />
				<xs:element name="objectId" type="xs:string" minOccurs="1"
					maxOccurs="1" />
				<xs:element name="targetFolderId" type="xs:string"
					minOccurs="1" maxOccurs="1" />
				<xs:element name="sourceFolderId" type="xs:string"
					minOccurs="0" maxOccurs="1" nillable="true" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="moveObjectResponse">
		<xs:complexType>
			<xs:sequence />
		</xs:complexType>
	</xs:element>
	<!--
		- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		- - - - - - - - - - - - - - - - -
	-->
	<!-- deleteObject Operation -->
	<xs:element name="deleteObject">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="repositoryId" type="xs:string"
					minOccurs="1" maxOccurs="1" />
				<xs:element name="objectId" type="xs:string" minOccurs="1"
					maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="deleteObjectResponse">
		<xs:complexType>
			<xs:sequence />
		</xs:complexType>
	</xs:element>
	<!--
		- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		- - - - - - - - - - - - - - - - -
	-->
	<!-- deleteTree Operation -->
	<xs:element name="deleteTree">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="repositoryId" type="xs:string"
					minOccurs="1" maxOccurs="1" />
				<xs:element name="folderId" type="xs:string" minOccurs="1"
					maxOccurs="1" />
				<xs:element name="unfileNonfolderObjects" type="cmis:enumUnfileNonfolderObjects"
					minOccurs="1" maxOccurs="1" />
				<xs:element name="continueOnFailure" type="xs:boolean"
					minOccurs="0" maxOccurs="1" nillable="true" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="deleteTreeResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="failedToDelete">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="objectId" type="xs:string"
								minOccurs="0" maxOccurs="unbounded" />
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<!--
		- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		- - - - - - - - - - - - - - - - -
	-->
	<!-- setContentStream Operation -->
	<xs:element name="setContentStream">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="repositoryId" type="xs:string"
					minOccurs="1" maxOccurs="1" />
				<xs:element name="documentId" type="xs:string" minOccurs="1"
					maxOccurs="1" />
				<xs:element name="overwriteFlag" type="xs:boolean"
					minOccurs="0" maxOccurs="1" nillable="true" />
				<xs:element name="contentStream" type="cmis:cmisContentStreamType"
					minOccurs="1" maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="setContentStreamResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="documentId" type="xs:string" minOccurs="1"
					maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<!--
		- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		- - - - - - - - - - - - - - - - -
	-->
	<!-- deleteContentStream Operation -->
	<xs:element name="deleteContentStream">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="repositoryId" type="xs:string"
					minOccurs="1" maxOccurs="1" />
				<xs:element name="documentId" type="xs:string" minOccurs="1"
					maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="deleteContentStreamResponse">
		<xs:complexType>
			<xs:sequence />
		</xs:complexType>
	</xs:element>
	<!--
		- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		- - - - - - - - - - - - - - - - -
	-->
	<!--[Multi-filing Services]-->
	<!--
		- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		- - - - - - - - - - - - - - - - -
	-->
	<!-- addObjectToFolder Operation-->
	<xs:element name="addObjectToFolder">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="repositoryId" type="xs:string"
					minOccurs="1" maxOccurs="1" />
				<xs:element name="objectId" type="xs:string" minOccurs="1"
					maxOccurs="1" />
				<xs:element name="folderId" type="xs:string" minOccurs="1"
					maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="addObjectToFolderResponse">
		<xs:complexType>
			<xs:sequence />
		</xs:complexType>
	</xs:element>
	<!--
		- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		- - - - - - - - - - - - - - - - -
	-->
	<!-- removeObjectFromFolder Operation-->
	<xs:element name="removeObjectFromFolder">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="repositoryId" type="xs:string"
					minOccurs="1" maxOccurs="1" />
				<xs:element name="objectId" type="xs:string" minOccurs="1"
					maxOccurs="1" />
				<xs:element name="folderId" type="xs:string" minOccurs="0"
					maxOccurs="1" nillable="true" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="removeObjectFromFolderResponse">
		<xs:complexType>
			<xs:sequence />
		</xs:complexType>
	</xs:element>
	<!--
		- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		- - - - - - - - - - - - - - - - -
	-->
	<!--[Discovery Services]-->
	<!--
		- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		- - - - - - - - - - - - - - - - -
	-->
	<!-- query Operation -->
	<!--
		This already provided in CMIS-Core <xs:element name="query"
		type="cmis:cmisQueryType" />
	-->
	<xs:element name="queryResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="cmis:object" minOccurs="0" maxOccurs="unbounded" />
				<xs:element name="hasMoreItems" type="xs:boolean"
					minOccurs="1" maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>


	<xs:element name="getContentChanges">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="repositoryId" type="xs:string" />
				<xs:element name="changeToken" type="xs:string"
					minOccurs="0" />
				<xs:element name="maxItems" type="xs:integer" minOccurs="0"
					maxOccurs="1" nillable="true" />
				<xs:element name="includeACL" type="xs:boolean"
					minOccurs="0" maxOccurs="1" nillable="true" />
				<xs:element name="includeProperties" type="xs:boolean"
					minOccurs="0" maxOccurs="1" nillable="true" />
				<xs:element name="filter" type="xs:string" minOccurs="0" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="getContentChangesResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="changedObject" type="cmis:cmisObjectType"
					minOccurs="0" maxOccurs="unbounded" nillable="true" />
				<xs:element name="changeToken" type="xs:string" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<!--
		- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		- - - - - - - - - - - - - - - - -
	-->
	<!--[Versioning Services]-->
	<!--
		- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		- - - - - - - - - - - - - - - - -
	-->
	<!-- checkOut Operation -->
	<xs:element name="checkOut">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="repositoryId" type="xs:string"
					minOccurs="1" maxOccurs="1" />
				<xs:element name="documentId" type="xs:string" minOccurs="1"
					maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="checkOutResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="documentId" type="xs:string" minOccurs="1"
					maxOccurs="1" />
				<xs:element name="contentCopied" type="xs:boolean"
					minOccurs="1" maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<!--
		- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		- - - - - - - - - - - - - - - - -
	-->
	<!-- cancelCheckOut Operation -->
	<xs:element name="cancelCheckOut">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="repositoryId" type="xs:string"
					minOccurs="1" maxOccurs="1" />
				<xs:element name="documentId" type="xs:string" minOccurs="1"
					maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="cancelCheckOutResponse">
		<xs:complexType>
			<xs:sequence />
		</xs:complexType>
	</xs:element>
	<!--
		- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		- - - - - - - - - - - - - - - - -
	-->
	<!-- checkIn Operation -->
	<xs:element name="checkIn">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="repositoryId" type="xs:string"
					minOccurs="1" maxOccurs="1" />
				<xs:element name="documentId" type="xs:string" minOccurs="1"
					maxOccurs="1" />
				<xs:element name="major" type="xs:boolean" minOccurs="0"
					maxOccurs="1" nillable="true" />
				<xs:element name="properties" type="cmis:cmisPropertiesType"
					minOccurs="0" maxOccurs="1" nillable="true" />
				<xs:element name="contentStream" type="cmis:cmisContentStreamType"
					minOccurs="0" maxOccurs="1" nillable="true" />
				<xs:element name="checkinComment" type="xs:string"
					minOccurs="0" maxOccurs="1" nillable="true" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="checkInResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="documentId" type="xs:string" minOccurs="1"
					maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<!--
		- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		- - - - - - - - - - - - - - - - -
	-->
	<!--getPropertiesOfLatestVersion-->
	<xs:element name="getPropertiesOfLatestVersion">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="repositoryId" type="xs:string"
					minOccurs="1" maxOccurs="1" />
				<xs:element name="versionSeriesId" type="xs:string"
					minOccurs="1" maxOccurs="1" />
				<xs:element name="majorVersion" type="xs:boolean"
					minOccurs="1" maxOccurs="1" />
				<xs:element name="filter" type="xs:string" minOccurs="0"
					maxOccurs="1" nillable="true" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="getPropertiesOfLatestVersionResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="cmis:object" minOccurs="1" maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<!--
		- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		- - - - - - - - - - - - - - - - -
	-->
	<!-- getAllVersions Operation -->
	<xs:element name="getAllVersions">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="repositoryId" type="xs:string"
					minOccurs="1" maxOccurs="1" />
				<xs:element name="versionSeriesId" type="xs:string"
					minOccurs="1" maxOccurs="1" />
				<xs:element name="filter" type="xs:string" minOccurs="0"
					maxOccurs="1" nillable="true" />
				<xs:element name="includeAllowableActions" type="xs:boolean"
					minOccurs="0" maxOccurs="1" nillable="true" />
				<xs:element name="includeRelationships" type="cmis:enumIncludeRelationships"
					minOccurs="0" maxOccurs="1" nillable="true" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="getAllVersionsResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="cmis:object" minOccurs="0" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<!--
		- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		- - - - - - - - - - - - - - - - -
	-->
	<!-- deleteAllVersions Operation -->
	<xs:element name="deleteAllVersions">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="repositoryId" type="xs:string"
					minOccurs="1" maxOccurs="1" />
				<xs:element name="versionSeriesId" type="xs:string"
					minOccurs="1" maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="deleteAllVersionsResponse">
		<xs:complexType>
			<xs:sequence />
		</xs:complexType>
	</xs:element>
	<!--
		- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		- - - - - - - - - - - - - - - - -
	-->
	<!--[Relationship Services]-->
	<!--
		- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		- - - - - - - - - - - - - - - - -
	-->
	<!-- getRelationships Operation -->
	<xs:element name="getRelationships">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="repositoryId" type="xs:string"
					minOccurs="1" maxOccurs="1" />
				<xs:element name="objectId" type="xs:string" minOccurs="1"
					maxOccurs="1" />
				<xs:element name="direction" type="cmis:enumRelationshipDirection"
					minOccurs="0" maxOccurs="1" nillable="true" />
				<xs:element name="typeId" type="xs:string" minOccurs="0"
					maxOccurs="1" nillable="true" />
				<xs:element name="includeSubRelationshipTypes" type="xs:boolean"
					minOccurs="0" maxOccurs="1" nillable="true" />
				<xs:element name="filter" type="xs:string" minOccurs="0"
					maxOccurs="1" nillable="true" />
				<xs:element name="includeAllowableActions" type="xs:boolean"
					minOccurs="0" maxOccurs="1" nillable="true" />
				<xs:element name="includeRelationships" type="cmis:enumIncludeRelationships"
					minOccurs="0" maxOccurs="1" nillable="true" />
				<xs:element name="maxItems" type="xs:integer" minOccurs="0"
					maxOccurs="1" nillable="true" />
				<xs:element name="skipCount" type="xs:integer" minOccurs="0"
					maxOccurs="1" nillable="true" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="getRelationshipsResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="cmis:object" minOccurs="0" maxOccurs="unbounded" />
				<xs:element name="hasMoreItems" type="xs:boolean"
					minOccurs="1" maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<!--
		- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		- - - - - - - - - - - - - - - - -
	-->
	<!--[Policy Services]-->
	<!--
		- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		- - - - - - - - - - - - - - - - -
	-->
	<!--applyPolicy Operation-->
	<xs:element name="applyPolicy">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="repositoryId" type="xs:string"
					minOccurs="1" maxOccurs="1" />
				<xs:element name="policyId" type="xs:string" minOccurs="1"
					maxOccurs="1" />
				<xs:element name="objectId" type="xs:string" minOccurs="1"
					maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="applyPolicyResponse">
		<xs:complexType>
			<xs:sequence />
		</xs:complexType>
	</xs:element>
	<!--
		- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		- - - - - - - - - - - - - - - - -
	-->
	<!--removePolicy Operation-->
	<xs:element name="removePolicy">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="repositoryId" type="xs:string"
					minOccurs="1" maxOccurs="1" />
				<xs:element name="policyId" type="xs:string" minOccurs="1"
					maxOccurs="1" />
				<xs:element name="objectId" type="xs:string" minOccurs="1"
					maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="removePolicyResponse">
		<xs:complexType>
			<xs:sequence />
		</xs:complexType>
	</xs:element>
	<!--
		- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		- - - - - - - - - - - - - - - - -
	-->
	<!--getAppliedPolicies Operation-->
	<xs:element name="getAppliedPolicies">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="repositoryId" type="xs:string"
					minOccurs="1" maxOccurs="1" />
				<xs:element name="objectId" type="xs:string" minOccurs="1"
					maxOccurs="1" />
				<xs:element name="filter" type="xs:string" minOccurs="0"
					maxOccurs="1" nillable="true" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="getAppliedPoliciesResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="cmis:object" minOccurs="0" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
</xs:schema>